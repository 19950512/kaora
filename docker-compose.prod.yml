# ==========================================
# DOCKER COMPOSE PARA PRODUÇÃO - KAORA
# ==========================================
services:
  # ==========================================
  # REDIS CACHE
  # ==========================================
  redis:
    image: redis:7-alpine
    container_name: kaora-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - kaora-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================
  # APLICAÇÃO KAORA
  # ==========================================
  kaora-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kaora-app-prod
    restart: unless-stopped
    environment:
      # Configurações do banco externo
      DATABASE_URL: ${DATABASE_URL}
      
      # Configurações do Redis
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      
      # Configurações Next.js
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-https://kaora.com.br}
      
      # Configurações AWS S3
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      
      # Configurações de ambiente
      NODE_ENV: production
      PORT: 3000
      
      # Configurações de email (se necessário)
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - kaora-network
      - proxy-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      # Labels para o Traefik/Nginx Proxy Manager
      - "traefik.enable=true"
      - "traefik.http.routers.kaora.rule=Host(`${DOMAIN:-kaora.com.br}`)"
      - "traefik.http.routers.kaora.entrypoints=websecure"
      - "traefik.http.routers.kaora.tls.certresolver=letsencrypt"
      - "traefik.http.services.kaora.loadbalancer.server.port=3000"

# ==========================================
# VOLUMES PERSISTENTES
# ==========================================
volumes:
  redis_data:
    driver: local

# ==========================================
# REDES
# ==========================================
networks:
  kaora-network:
    driver: bridge
  proxy-net:
    external: true
